{
    "parents": [],
    "prev": null,
    "next": {
        "link": "objectstore/",
        "title": "Faking LDAP servers"
    },
    "title": "python-ldap-faker",
    "meta": null,
    "body": "<section id=\"python-ldap-faker\">\n<h1>python-ldap-faker<a class=\"headerlink\" href=\"#python-ldap-faker\" title=\"Permalink to this heading\">\uf0c1</a></h1>\n<p>Current version is 1.1.0.</p>\n<p>This package provides a fake <code class=\"docutils literal notranslate\"><span class=\"pre\">python-ldap</span></code> interface that can be used for\nautomated testing of code that uses <code class=\"docutils literal notranslate\"><span class=\"pre\">python-ldap</span></code>.   With <code class=\"docutils literal notranslate\"><span class=\"pre\">python-ldap-faker</span></code>\nyou will be able to test your LDAP code without having to stand up an actual\nLDAP server, and also without having to use complicated\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch\" title=\"(in Python v3.11)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">unittest.mock.patch</span></code></a> and <a class=\"reference external\" href=\"https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">unittest.mock.Mock</span></code></a> setups.</p>\n<p>When writing tests for code that talks to an LDAP server with <code class=\"docutils literal notranslate\"><span class=\"pre\">python-ldap</span></code>, we\nwant to be able to control <code class=\"docutils literal notranslate\"><span class=\"pre\">python-ldap</span></code> interactions in our tests to ensure\nthat our own code works properly.  This may include populating the LDAP server\nwith fixture data, monitoring if, when and how <code class=\"docutils literal notranslate\"><span class=\"pre\">python-ldap</span></code> calls are made by\nour code, and ensuring our code handles <code class=\"docutils literal notranslate\"><span class=\"pre\">python-ldap</span></code> exceptions properly.</p>\n<p>Managing an actual LDAP server during our tests is usually out of the question,\nso typically we revert to patching the <code class=\"docutils literal notranslate\"><span class=\"pre\">python-ldap</span></code> code to use mock objects\ninstead, but this is very verbose and can lead to test code errors in practice.</p>\n<p>This package provides replacement <a class=\"reference external\" href=\"https://www.python-ldap.org/en/latest/reference/ldap.html#ldap.initialize\" title=\"(in python-ldap v3.4)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">ldap.initialize</span></code></a>,\n<a class=\"reference external\" href=\"https://www.python-ldap.org/en/latest/reference/ldap.html#ldap.set_option\" title=\"(in python-ldap v3.4)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">ldap.set_option</span></code></a> and <a class=\"reference external\" href=\"https://www.python-ldap.org/en/latest/reference/ldap.html#ldap.get_option\" title=\"(in python-ldap v3.4)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">ldap.get_option</span></code></a> functions, as well as\na test-instrumented <a class=\"reference external\" href=\"https://www.python-ldap.org/en/latest/reference/ldap.html#ldap.ldap.ldapobject.LDAPObject\" title=\"(in python-ldap v3.4)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ldap.ldap.ldapobject.LDAPObject</span></code></a> replacement.</p>\n<section id=\"installation\">\n<h2>Installation<a class=\"headerlink\" href=\"#installation\" title=\"Permalink to this heading\">\uf0c1</a></h2>\n<p>To install from PyPI:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">python</span><span class=\"o\">-</span><span class=\"n\">ldap</span><span class=\"o\">-</span><span class=\"n\">faker</span>\n</pre></div>\n</div>\n<p>If you want, you can run the tests:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">python</span> <span class=\"o\">-</span><span class=\"n\">m</span> <span class=\"n\">unittest</span> <span class=\"n\">discover</span>\n</pre></div>\n</div>\n</section>\n<section id=\"features\">\n<h2>Features:<a class=\"headerlink\" href=\"#features\" title=\"Permalink to this heading\">\uf0c1</a></h2>\n<ul>\n<li><p>These <code class=\"docutils literal notranslate\"><span class=\"pre\">python-ldap</span></code> global functions are faked:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">ldap.initialize</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">ldap.set_option</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">ldap.get_option</span></code></p></li>\n</ul>\n</div></blockquote>\n</li>\n<li><p>These <code class=\"docutils literal notranslate\"><span class=\"pre\">ldap.ldapobject.LDAPObject</span></code> methods are faked:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">set_option</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">get_option</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">start_tls_s</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">simple_bind_s</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">unbind_s</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">search_s</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">search_ext</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">result3</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">compare_s</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">add_s</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">modify_s</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">rename_s</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">delete_s</span></code></p></li>\n</ul>\n</div></blockquote>\n</li>\n<li><p>For <code class=\"docutils literal notranslate\"><span class=\"pre\">search_ext</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">search_s</span></code>, your filter string will be validated as a\nvalid LDAP filter, and your filter will be applied directly to your objects in\nour fake \u201cserver\u201d to generate the result list.  No canned searches!</p></li>\n<li><p>Inspect your call history for all calls (name, arguments), and test the order\nin which they were made</p></li>\n<li><p>Simulate multiple fake LDAP \u201cservers\u201d with different sets of objects that\ncorrespond to different LDAP URIs.</p></li>\n<li><p>Ease your test setup with <a class=\"reference internal\" href=\"api/#ldap_faker.LDAPFakerMixin\" title=\"ldap_faker.LDAPFakerMixin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LDAPFakerMixin</span></code></a>, a mixin for\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/unittest.html#unittest.TestCase\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">unittest.TestCase</span></code></a></p>\n<blockquote>\n<div><ul>\n<li><p>Automatically manages patching <code class=\"docutils literal notranslate\"><span class=\"pre\">python-ldap</span></code> for the code under test</p></li>\n<li><p>Populate objects into one or more LDAP \u201cservers\u201d with fixture files</p></li>\n<li><p>Provides the following test instrumentation for inspecting state after the test:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>Access to the full object store for each LDAP uri accessed</p></li>\n<li><p>All connections made</p></li>\n<li><p>All <code class=\"docutils literal notranslate\"><span class=\"pre\">python-ldap</span></code> API calls made</p></li>\n<li><p>All <code class=\"docutils literal notranslate\"><span class=\"pre\">python-ldap</span></code> LDAP options set</p></li>\n</ul>\n</div></blockquote>\n</li>\n<li><p>Provides test isolation: object store changes, connections, call history,\noption changes are all reset between tests</p></li>\n<li><p>Use handy LDAP specific asserts to ease your testing</p></li>\n</ul>\n</div></blockquote>\n</li>\n<li><p>Define your own hooks to change the behavior of your fake \u201cservers\u201d</p></li>\n<li><p>Support behavior for specific LDAP implementations:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>Redhat Directory Server/389 implementation support: have your test believe\nit\u2019s talking to an RHDS/389 server.</p></li>\n</ul>\n</div></blockquote>\n</li>\n</ul>\n</section>\n<section id=\"quickstart\">\n<h2>Quickstart<a class=\"headerlink\" href=\"#quickstart\" title=\"Permalink to this heading\">\uf0c1</a></h2>\n<p>The easiest way to use <code class=\"docutils literal notranslate\"><span class=\"pre\">python-ldap-faker</span></code> in your <a class=\"reference external\" href=\"https://docs.python.org/3/library/unittest.html#module-unittest\" title=\"(in Python v3.11)\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">unittest</span></code></a> based\ntests is to use the <a class=\"reference internal\" href=\"api/#ldap_faker.LDAPFakerMixin\" title=\"ldap_faker.LDAPFakerMixin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LDAPFakerMixin</span></code></a> mixin for\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/unittest.html#unittest.TestCase\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">unittest.TestCase</span></code></a>.</p>\n<p>This will patch <a class=\"reference external\" href=\"https://www.python-ldap.org/en/latest/reference/ldap.html#ldap.initialize\" title=\"(in python-ldap v3.4)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">ldap.initialize</span></code></a>, <a class=\"reference external\" href=\"https://www.python-ldap.org/en/latest/reference/ldap.html#ldap.set_option\" title=\"(in python-ldap v3.4)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">ldap.set_option</span></code></a> and\n<a class=\"reference external\" href=\"https://www.python-ldap.org/en/latest/reference/ldap.html#ldap.get_option\" title=\"(in python-ldap v3.4)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">ldap.get_option</span></code></a> to use our <a class=\"reference internal\" href=\"api/#ldap_faker.FakeLDAP\" title=\"ldap_faker.FakeLDAP\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FakeLDAP</span></code></a> interface, and load\nfixtures in from JSON files to use as test data.</p>\n<p>Let\u2019s say we have a class <code class=\"docutils literal notranslate\"><span class=\"pre\">App</span></code> in our <code class=\"docutils literal notranslate\"><span class=\"pre\">myapp</span></code> module that does LDAP work\nthat we want to test.</p>\n<p>First, prepare a file named <code class=\"docutils literal notranslate\"><span class=\"pre\">data.json</span></code> with the objects you want loaded into\nyour fake LDAP server.   Let\u2019s say you want your data to consist of some\n<code class=\"docutils literal notranslate\"><span class=\"pre\">posixAccount</span></code> objects.  If we make <code class=\"docutils literal notranslate\"><span class=\"pre\">data.json</span></code> look like this:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">[</span>\n   <span class=\"p\">[</span>\n      <span class=\"s2\">&quot;uid=foo,ou=bar,o=baz,c=country&quot;</span><span class=\"p\">,</span>\n      <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;uid&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;cn&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Foo Bar&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;uidNumber&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;123&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;gidNumber&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;123&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;homeDirectory&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;/home/foo&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;userPassword&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;the password&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;objectclass&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n               <span class=\"s2\">&quot;posixAccount&quot;</span><span class=\"p\">,</span>\n               <span class=\"s2\">&quot;top&quot;</span>\n            <span class=\"p\">]</span>\n      <span class=\"p\">}</span>\n   <span class=\"p\">],</span>\n   <span class=\"p\">[</span>\n      <span class=\"s2\">&quot;uid=fred,ou=bar,o=baz,c=country&quot;</span><span class=\"p\">,</span>\n      <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;uid&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;fred&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;cn&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Fred Flintstone&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;uidNumber&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;124&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;gidNumber&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;124&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;homeDirectory&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;/home/fred&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;userPassword&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;the fredpassword&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;objectclass&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n               <span class=\"s2\">&quot;posixAccount&quot;</span><span class=\"p\">,</span>\n               <span class=\"s2\">&quot;top&quot;</span>\n            <span class=\"p\">]</span>\n      <span class=\"p\">}</span>\n   <span class=\"p\">],</span>\n   <span class=\"p\">[</span>\n      <span class=\"s2\">&quot;uid=barney,ou=bar,o=baz,c=country&quot;</span><span class=\"p\">,</span>\n      <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;uid&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;barney&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;cn&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Barney Rubble&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;uidNumber&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;125&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;gidNumber&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;125&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;homeDirectory&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;/home/barney&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;userPassword&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;the barneypassword&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;objectclass&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n               <span class=\"s2\">&quot;posixAccount&quot;</span><span class=\"p\">,</span>\n               <span class=\"s2\">&quot;top&quot;</span>\n            <span class=\"p\">]</span>\n      <span class=\"p\">}</span>\n   <span class=\"p\">]</span>\n<span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>We can write our <code class=\"docutils literal notranslate\"><span class=\"pre\">TestCase</span></code> like so:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">unittest</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">ldap</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ldap_faker</span> <span class=\"kn\">import</span> <span class=\"n\">LDAPFakerMixin</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">myapp</span> <span class=\"kn\">import</span> <span class=\"n\">App</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">YourTestCase</span><span class=\"p\">(</span><span class=\"n\">LDAPFakerMixin</span><span class=\"p\">,</span> <span class=\"n\">unittest</span><span class=\"o\">.</span><span class=\"n\">TestCase</span><span class=\"p\">):</span>\n\n    <span class=\"n\">ldap_modules</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;myapp&#39;</span><span class=\"p\">]</span>\n    <span class=\"n\">ldap_fixtures</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;data.json&#39;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">test_auth_works</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">App</span><span class=\"p\">()</span>\n        <span class=\"c1\"># A method that does a `simple_bind_s`</span>\n        <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"p\">(</span><span class=\"s1\">&#39;fred&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;the fredpassword&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_connections</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertLDAPConnectionMethodCalled</span><span class=\"p\">(</span>\n            <span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"s1\">&#39;simple_bind_s&#39;</span><span class=\"p\">,</span>\n            <span class=\"p\">{</span><span class=\"s1\">&#39;who&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;uid=fred,ou=bar,o=baz,c=country&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cred&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;the fredpassword&#39;</span><span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">test_correct_connection_options_were_set</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">App</span><span class=\"p\">()</span>\n        <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"p\">(</span><span class=\"s1\">&#39;fred&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;the fredpassword&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_connections</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertLDAPConnectionOptionSet</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"n\">ldap</span><span class=\"o\">.</span><span class=\"n\">OPT_X_TLX_NEWCTX</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">test_tls_was_used_before_auth</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">App</span><span class=\"p\">()</span>\n        <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"p\">(</span><span class=\"s1\">&#39;fred&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;the fredpassword&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_connections</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertLDAPConnectiontMethodCalled</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"s1\">&#39;start_tls_s&#39;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertLDAPConnectionMethodCalledAfter</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"s1\">&#39;simple_bind_s&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;start_tls_s&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"toctree-wrapper compound\">\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"objectstore/\">Faking LDAP servers</a><ul>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"objectstore/#structure-of-ldap-records\">Structure of LDAP records</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"objectstore/#ldapserverfactory\">LDAPServerFactory</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"objectstore/#objectstore\">ObjectStore</a></li>\n</ul>\n</li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"implementations/\">Specific LDAP implementations supported</a><ul>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"implementations/#id1\">Redhat Directory Server/389</a></li>\n</ul>\n</li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"binds/\">Authentication and Authorization</a><ul>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"binds/#authorization-within-python-ldap-faker\">Authorization within python-ldap-faker</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"binds/#anonymous-binds\">Anonymous binds</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"binds/#authenticated-binds\">Authenticated binds</a></li>\n</ul>\n</li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"unittest/\">Using ldap_faker with unittest</a><ul>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"unittest/#configuring-your-ldapfakermixin-testcase\">Configuring your LDAPFakerMixin TestCase</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"unittest/#test-isolation\">Test isolation</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"unittest/#test-support-offered-by-ldapfakermixin\">Test support offered by LDAPFakerMixin</a></li>\n</ul>\n</li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"hooks/\">Hooks: modifying ObjectStore behavior</a><ul>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"hooks/#registering-hooks\">Registering hooks</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"hooks/#tagged-hooks\">Tagged hooks</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"hooks/#available-hooks\">Available hooks</a></li>\n</ul>\n</li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api/\">Developer Interface</a><ul>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/#unittest-support\">Unittest Support</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/#python-ldap-replacements\">python-ldap replacements</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/#ldap-server-like-objects\">LDAP Server like objects</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/#hook-management\">Hook management</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/#type-aliases\">Type Aliases</a></li>\n</ul>\n</li>\n</ul>\n</div>\n</section>\n</section>\n",
    "metatags": "<meta name=\"generator\" content=\"Docutils 0.17.1: http://docutils.sourceforge.net/\" />\n",
    "rellinks": [
        [
            "genindex",
            "General Index",
            "I",
            "index"
        ],
        [
            "py-modindex",
            "Python Module Index",
            "",
            "modules"
        ],
        [
            "objectstore",
            "Faking LDAP servers",
            "N",
            "next"
        ]
    ],
    "sourcename": "index.rst.txt",
    "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">python-ldap-faker</a><ul>\n<li><a class=\"reference internal\" href=\"#installation\">Installation</a></li>\n<li><a class=\"reference internal\" href=\"#features\">Features:</a></li>\n<li><a class=\"reference internal\" href=\"#quickstart\">Quickstart</a></li>\n</ul>\n</li>\n</ul>\n",
    "display_toc": true,
    "page_source_suffix": ".rst",
    "current_page_name": "index",
    "sidebars": [
        "localtoc.html",
        "relations.html",
        "sourcelink.html",
        "searchbox.html"
    ],
    "customsidebar": null,
    "favicon_url": null,
    "logo_url": null,
    "alabaster_version": "0.7.12"
}
